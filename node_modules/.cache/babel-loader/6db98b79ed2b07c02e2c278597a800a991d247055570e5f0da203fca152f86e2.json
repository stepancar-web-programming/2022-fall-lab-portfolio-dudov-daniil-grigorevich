{"ast":null,"code":"var _jsxFileName = \"/home/shket/projects/javascript/shket-dev/src/pages/ReleasePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { slides } from \"../consts\";\nimport classes from \"../styles/ReleasePage.module.css\";\nimport { mod } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ReleasePage() {\n  _s();\n  const [slideIndex, setSlideIndex] = useState(0);\n  function getSlideStyles(index) {\n    return [classes.slide, isActive(index) && classes.active].join(\" \");\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Releases\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.slideSet,\n      children: slides.map((_ref, index) => {\n        let {\n          name,\n          image,\n          description\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: getSlideStyles(index),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n// <img src={image} />\n// <button onClick={() => setSlideIndex(slideIndex - mod(slideIndex, slides.length))}>Previous</button>\n// <button onClick={() => setSlideIndex(slideIndex + mod(slideIndex, slides.length))}>Next</button>\n_s(ReleasePage, \"0yB34WFJoKB17f3kT+wIMpxNoV8=\");\n_c = ReleasePage;\nvar _c;\n$RefreshReg$(_c, \"ReleasePage\");","map":{"version":3,"names":["React","useState","slides","classes","mod","ReleasePage","slideIndex","setSlideIndex","getSlideStyles","index","slide","isActive","active","join","slideSet","map","name","image","description"],"sources":["/home/shket/projects/javascript/shket-dev/src/pages/ReleasePage.jsx"],"sourcesContent":["import React, {useState} from \"react\"\nimport {slides} from \"../consts\"\nimport classes from \"../styles/ReleasePage.module.css\"\nimport {mod} from \"../utils\"\n\nexport default function ReleasePage() {\n  const [slideIndex, setSlideIndex] = useState(0)\n\n  function getSlideStyles(index) {\n    return [classes.slide, isActive(index) && classes.active].join(\" \")\n  }\n\n  return (\n    <main>\n      <h1>Releases</h1>\n      <section className={classes.slideSet}>\n        {slides.map(({name, image, description}, index) => (\n          <div\n            key={index}\n            style={getSlideStyles(index)}\n          >\n            <h3>{name}</h3>\n            <p>{description}</p>\n          </div>\n        ))}\n      </section>\n    </main>\n  )\n}\n            // <img src={image} />\n        // <button onClick={() => setSlideIndex(slideIndex - mod(slideIndex, slides.length))}>Previous</button>\n        // <button onClick={() => setSlideIndex(slideIndex + mod(slideIndex, slides.length))}>Next</button>\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAAQC,MAAM,QAAO,WAAW;AAChC,OAAOC,OAAO,MAAM,kCAAkC;AACtD,SAAQC,GAAG,QAAO,UAAU;AAAA;AAE5B,eAAe,SAASC,WAAW,GAAG;EAAA;EACpC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAE/C,SAASO,cAAc,CAACC,KAAK,EAAE;IAC7B,OAAO,CAACN,OAAO,CAACO,KAAK,EAAEC,QAAQ,CAACF,KAAK,CAAC,IAAIN,OAAO,CAACS,MAAM,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;EACrE;EAEA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiB,eACjB;MAAS,SAAS,EAAEV,OAAO,CAACW,QAAS;MAAA,UAClCZ,MAAM,CAACa,GAAG,CAAC,OAA6BN,KAAK;QAAA,IAAjC;UAACO,IAAI;UAAEC,KAAK;UAAEC;QAAW,CAAC;QAAA,oBACrC;UAEE,KAAK,EAAEV,cAAc,CAACC,KAAK,CAAE;UAAA,wBAE7B;YAAA,UAAKO;UAAI;YAAA;YAAA;YAAA;UAAA,QAAM,eACf;YAAA,UAAIE;UAAW;YAAA;YAAA;YAAA;UAAA,QAAK;QAAA,GAJfT,KAAK;UAAA;UAAA;UAAA;QAAA,QAKN;MAAA,CACP;IAAC;MAAA;MAAA;MAAA;IAAA,QACM;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEX;AACY;AACJ;AACA;AAAA,GA1BgBJ,WAAW;AAAA,KAAXA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}