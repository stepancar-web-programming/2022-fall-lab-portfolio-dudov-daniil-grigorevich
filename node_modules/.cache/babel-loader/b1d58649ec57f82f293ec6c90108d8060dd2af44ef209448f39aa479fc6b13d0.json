{"ast":null,"code":"var _jsxFileName = \"/home/shket/projects/javascript/shket-dev/src/components/TerminalForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { colors } from \"../consts\";\nimport classes from \"../styles/TerminalForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TerminalForm(_ref) {\n  _s();\n  let {\n    active,\n    intention\n  } = _ref;\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const formRef = useRef(null);\n  const [sure, setSure] = useState(false);\n  const [data, setData] = useState({});\n  useEffect(() => {\n    if (active) {\n      setCurrentIndex(0);\n      setData({});\n      formRef.current.reset();\n    }\n  }, [active]);\n  useEffect(() => {\n    if (active && currentIndex < lines.length) {\n      formRef.current[currentIndex].focus();\n    }\n  }, [active, currentIndex]);\n  const lines = [{\n    prompt: \"Your name: \",\n    handler: e => setData({\n      ...data,\n      name: e.target.value\n    })\n  }, {\n    prompt: \"Your phone: \",\n    handler: e => setData({\n      ...data,\n      phone: e.target.value\n    })\n  }, {\n    prompt: \"Your email adress: \",\n    handler: e => setData({\n      ...data,\n      email: e.target.value\n    })\n  }, {\n    prompt: \"Your adress: \",\n    handler: e => setData({\n      ...data,\n      adress: e.target.value\n    })\n  }, {\n    prompt: `Are you sure you wanna ${intention}? [y/n] `,\n    handler: e => {\n      const answer = e.target.value;\n      setSure(answer === \"y\" || answer === \"Y\" || answer === \"yes\");\n    }\n  }];\n  function displayResult() {\n    if (currentIndex === lines.length) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: colors.foam,\n          children: \"Your request was heard:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), \" \", JSON.stringify(data), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this);\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Abort.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }, this);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.window,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.frame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      ref: formRef,\n      children: lines.map((_ref2, index) => {\n        let {\n          prompt,\n          handler\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            display: index > currentIndex && \"none\"\n          },\n          children: [\"guest\", /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 18\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: colors.foam,\n            children: prompt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            disabled: index !== currentIndex && \"disabled\",\n            autoComplete: \"new-password\",\n            onKeyDown: event => {\n              if (event.key === \"Enter\") {\n                setCurrentIndex(index + 1);\n                handler(event);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), displayResult()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(TerminalForm, \"v8QliS0WJ2P7vzwokMdCEjltP30=\");\n_c = TerminalForm;\nvar _c;\n$RefreshReg$(_c, \"TerminalForm\");","map":{"version":3,"names":["React","useEffect","useRef","useState","colors","classes","TerminalForm","active","intention","currentIndex","setCurrentIndex","formRef","sure","setSure","data","setData","current","reset","lines","length","focus","prompt","handler","e","name","target","value","phone","email","adress","answer","displayResult","foam","JSON","stringify","window","frame","map","index","display","event","key"],"sources":["/home/shket/projects/javascript/shket-dev/src/components/TerminalForm.jsx"],"sourcesContent":["import React, {useEffect, useRef, useState} from \"react\"\nimport {colors} from \"../consts\"\nimport classes from \"../styles/TerminalForm.module.css\"\n\nexport default function TerminalForm({active, intention}) {\n  const [currentIndex, setCurrentIndex] = useState(0)\n  const formRef = useRef(null)\n  const [sure, setSure] = useState(false)\n  const [data, setData] = useState({})\n\n  useEffect(() => {\n    if (active) {\n      setCurrentIndex(0)\n      setData({})\n      formRef.current.reset()\n    }\n  }, [active])\n\n  useEffect(() => {\n    if (active && currentIndex < lines.length) {\n      formRef.current[currentIndex].focus()\n    }\n  }, [active, currentIndex])\n\n  const lines = [\n    {prompt: \"Your name: \", handler: (e) => setData({...data, name: e.target.value})},\n    {prompt: \"Your phone: \", handler: (e) => setData({...data, phone: e.target.value})},\n    {prompt: \"Your email adress: \", handler: (e) => setData({...data, email: e.target.value})},\n    {prompt: \"Your adress: \", handler: (e) => setData({...data, adress: e.target.value})},\n    {\n      prompt: `Are you sure you wanna ${intention}? [y/n] `,\n      handler: (e) => {\n        const answer = e.target.value\n        setSure(answer === \"y\" || answer === \"Y\" || answer === \"yes\")\n      },\n    },\n  ]\n\n  function displayResult() {\n    if (currentIndex === lines.length) {\n        return (\n          <p>\n            <span style={colors.foam}>Your request was heard:</span> {JSON.stringify(data)}{\" \"}\n          </p>\n        )\n        return <p>Abort.</p>\n    }\n  }\n\n  return (\n    <div className={classes.window}>\n      <div className={classes.frame}></div>\n      <form ref={formRef}>\n        {lines.map(({prompt, handler}, index) => (\n          <p key={index} style={{display: index > currentIndex && \"none\"}}>\n            guest<em>$</em> <span style={colors.foam}>{prompt}</span>\n            <input\n              disabled={index !== currentIndex && \"disabled\"}\n              autoComplete=\"new-password\"\n              onKeyDown={(event) => {\n                if (event.key === \"Enter\") {\n                  setCurrentIndex(index + 1)\n                  handler(event)\n                }\n              }}\n            />\n          </p>\n        ))}\n      </form>\n      {displayResult()}\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}