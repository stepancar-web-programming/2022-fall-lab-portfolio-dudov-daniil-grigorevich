{"ast":null,"code":"var _jsxFileName = \"/home/shket/projects/javascript/shket-dev/src/components/Slider.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { slides } from \"../consts\";\nimport classes from \"../styles/Slider.module.css\";\nimport { mod } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ReleasePage() {\n  _s();\n  const [slideIndex, setSlideIndex] = useState(2);\n  function getSlideStyles(index) {\n    if (index < slideIndex) return {\n      left: \"-100%\"\n    };else if (index === slideIndex) return {\n      left: 0\n    };else return {\n      left: \"100%\"\n    };\n  }\n  function getIndicatorClasses(index) {\n    return index === slideIndex ? classes.active : null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.baseContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.slider,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: [classes.arrow, classes.left].join(\" \"),\n        onClick: () => setSlideIndex(mod(slideIndex - 1, slides.length))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.slideSet,\n        children: slides.map((_ref, index) => {\n          let {\n            name,\n            image,\n            description\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: getSlideStyles(index),\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: [classes.arrow, classes.right].join(\" \"),\n        onClick: () => setSlideIndex(mod(slideIndex + 1, slides.length))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.indicators,\n      children: slides.map((_ref2, index) => {\n        let {} = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: getIndicatorClasses(index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n}\n_s(ReleasePage, \"kcd8Pc6GqlfsmlczQ8du2SA4Uo4=\");\n_c = ReleasePage;\nvar _c;\n$RefreshReg$(_c, \"ReleasePage\");","map":{"version":3,"names":["React","useState","slides","classes","mod","ReleasePage","slideIndex","setSlideIndex","getSlideStyles","index","left","getIndicatorClasses","active","baseContainer","slider","arrow","join","length","slideSet","map","name","image","description","right","indicators"],"sources":["/home/shket/projects/javascript/shket-dev/src/components/Slider.jsx"],"sourcesContent":["import React, {useState} from \"react\"\nimport {slides} from \"../consts\"\nimport classes from \"../styles/Slider.module.css\"\nimport {mod} from \"../utils\"\n\nexport default function ReleasePage() {\n  const [slideIndex, setSlideIndex] = useState(2)\n\n  function getSlideStyles(index) {\n    if (index < slideIndex) return {left: \"-100%\"}\n    else if (index === slideIndex) return {left: 0}\n    else return {left: \"100%\"}\n  }\n\n  function getIndicatorClasses(index) {\n    return index === slideIndex ? classes.active : null\n  }\n\n  return (\n      <div className={classes.baseContainer}>\n        <div className={classes.slider}>\n          <div\n            className={[classes.arrow, classes.left].join(\" \")}\n            onClick={() => setSlideIndex(mod(slideIndex - 1, slides.length))}\n          ></div>\n          <div className={classes.slideSet}>\n            {slides.map(({name, image, description}, index) => (\n              <div key={index} style={getSlideStyles(index)}>\n                <h2>{name}</h2>\n                <img src={image} />\n                <p>{description}</p>\n              </div>\n            ))}\n          </div>\n          <div\n            className={[classes.arrow, classes.right].join(\" \")}\n            onClick={() => setSlideIndex(mod(slideIndex + 1, slides.length))}\n          ></div>\n        </div>\n        <div className={classes.indicators}>\n          {slides.map(({}, index) => (\n            <div key={index} className={getIndicatorClasses(index)}></div>\n          ))}\n        </div>\n      </div>\n  )\n}\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAAQC,MAAM,QAAO,WAAW;AAChC,OAAOC,OAAO,MAAM,6BAA6B;AACjD,SAAQC,GAAG,QAAO,UAAU;AAAA;AAE5B,eAAe,SAASC,WAAW,GAAG;EAAA;EACpC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAE/C,SAASO,cAAc,CAACC,KAAK,EAAE;IAC7B,IAAIA,KAAK,GAAGH,UAAU,EAAE,OAAO;MAACI,IAAI,EAAE;IAAO,CAAC,MACzC,IAAID,KAAK,KAAKH,UAAU,EAAE,OAAO;MAACI,IAAI,EAAE;IAAC,CAAC,MAC1C,OAAO;MAACA,IAAI,EAAE;IAAM,CAAC;EAC5B;EAEA,SAASC,mBAAmB,CAACF,KAAK,EAAE;IAClC,OAAOA,KAAK,KAAKH,UAAU,GAAGH,OAAO,CAACS,MAAM,GAAG,IAAI;EACrD;EAEA,oBACI;IAAK,SAAS,EAAET,OAAO,CAACU,aAAc;IAAA,wBACpC;MAAK,SAAS,EAAEV,OAAO,CAACW,MAAO;MAAA,wBAC7B;QACE,SAAS,EAAE,CAACX,OAAO,CAACY,KAAK,EAAEZ,OAAO,CAACO,IAAI,CAAC,CAACM,IAAI,CAAC,GAAG,CAAE;QACnD,OAAO,EAAE,MAAMT,aAAa,CAACH,GAAG,CAACE,UAAU,GAAG,CAAC,EAAEJ,MAAM,CAACe,MAAM,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAC5D,eACP;QAAK,SAAS,EAAEd,OAAO,CAACe,QAAS;QAAA,UAC9BhB,MAAM,CAACiB,GAAG,CAAC,OAA6BV,KAAK;UAAA,IAAjC;YAACW,IAAI;YAAEC,KAAK;YAAEC;UAAW,CAAC;UAAA,oBACrC;YAAiB,KAAK,EAAEd,cAAc,CAACC,KAAK,CAAE;YAAA,wBAC5C;cAAA,UAAKW;YAAI;cAAA;cAAA;cAAA;YAAA,QAAM,eACf;cAAK,GAAG,EAAEC;YAAM;cAAA;cAAA;cAAA;YAAA,QAAG,eACnB;cAAA,UAAIC;YAAW;cAAA;cAAA;cAAA;YAAA,QAAK;UAAA,GAHZb,KAAK;YAAA;YAAA;YAAA;UAAA,QAIT;QAAA,CACP;MAAC;QAAA;QAAA;QAAA;MAAA,QACE,eACN;QACE,SAAS,EAAE,CAACN,OAAO,CAACY,KAAK,EAAEZ,OAAO,CAACoB,KAAK,CAAC,CAACP,IAAI,CAAC,GAAG,CAAE;QACpD,OAAO,EAAE,MAAMT,aAAa,CAACH,GAAG,CAACE,UAAU,GAAG,CAAC,EAAEJ,MAAM,CAACe,MAAM,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAC5D;IAAA;MAAA;MAAA;MAAA;IAAA,QACH,eACN;MAAK,SAAS,EAAEd,OAAO,CAACqB,UAAW;MAAA,UAChCtB,MAAM,CAACiB,GAAG,CAAC,QAAKV,KAAK;QAAA,IAAT,CAAC,CAAC;QAAA,oBACb;UAAiB,SAAS,EAAEE,mBAAmB,CAACF,KAAK;QAAE,GAA7CA,KAAK;UAAA;UAAA;UAAA;QAAA,QAA+C;MAAA,CAC/D;IAAC;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEZ;AAAC,GAzCuBJ,WAAW;AAAA,KAAXA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}